{"version":3,"sources":["components/gallery/header.js","components/gallery/sortBtn.js","components/gallery/photos/photo.js","components/gallery/photos/title.js","components/gallery/photos.js","components/gallery/loader.js","components/gallery.js","serviceWorker.js","index.js","App.js"],"names":["Header","react_default","a","createElement","className","SortBtn","_ref","btnFixed","ascending","sortPhotos","concat","onClick","role","Photo","_ref$photo","photo","farm","server","id","secret","title","src","alt","Title","Photos","props","photos","map","key","Loader","react_spinners","sizeUnit","size","loading","Gallery","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","connection","WebSocket","window","location","origin","replace","onScroll","loadMorePhotos","fixSearchBtn","scrollTop","pageYOffset","document","documentElement","body","innerHeight","offsetHeight","state","isLoading","setState","send","headerBottom","querySelector","prevState","sortedPhotos","sort","b","toLowerCase","toConsumableArray","_this2","onmessage","payload","data","JSON","parse","newUniquePhotos","filter","i","length","addEventListener","interval","setInterval","removeEventListener","clearInterval","react","Component","Boolean","hostname","match","ReactDOM","render","gallery_Gallery","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a7655f0e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <h1 className=\"header\">Flickr most recent public photos</h1>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function SortBtn({ btnFixed, ascending, sortPhotos }) {\r\n  return (\r\n    <div className={`sort-btn-container ${btnFixed ? 'fixed' : ''}`}>\r\n      {ascending\r\n        ? <i onClick={sortPhotos} className=\"fas fa-sort-alpha-down sort-btn\" role=\"none\" />\r\n        : <i onClick={sortPhotos} className=\"fas fa-sort-alpha-up sort-btn\" role=\"none\" />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nSortBtn.propTypes = {\r\n  btnFixed: PropTypes.bool.isRequired,\r\n  ascending: PropTypes.bool.isRequired,\r\n  sortPhotos: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Photo({ photo: { farm, server, id, secret, title } }) {\r\n  return (\r\n    <div className=\"photo-container\">\r\n      <div className=\"photo-wrapper\">\r\n        <img\r\n          className=\"photo\"\r\n          src={`https://farm${farm}.staticflickr.com/${server}/${id}_${secret}.jpg`}\r\n          alt={title}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPhoto.propTypes = {\r\n  photo: PropTypes.shape({\r\n    farm: PropTypes.number.isRequired,\r\n    server: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    secret: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Title({ title }) {\r\n  return (\r\n    <div className=\"title-container\">\r\n      {title && (\r\n        <div className=\"title-wrapper\">\r\n          <div className=\"title\">{title}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Photo from './photos/photo';\r\nimport Title from './photos/title';\r\n\r\nexport default function Photos(props) {\r\n  return (\r\n    <div className=\"photos\">\r\n      {props.photos.map(photo => (\r\n        <div\r\n          className=\"card-container\"\r\n          key={photo.id}\r\n        >\r\n          <div className=\"card-wrapper\">\r\n            <Photo photo={photo} />\r\n            <Title title={photo.title} />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nPhotos.propTypes = {\r\n  photos: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n};\r\n","import React from 'react';\r\nimport { DotLoader } from 'react-spinners';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"dotLoader\">\r\n      <DotLoader\r\n        sizeUnit=\"px\"\r\n        size={50}\r\n        loading={true}\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { Component, Fragment } from 'react';\r\nimport Header from './gallery/header';\r\nimport SortBtn from './gallery/sortBtn';\r\nimport Photos from './gallery/photos';\r\nimport Loader from './gallery/loader';\r\n\r\nexport default class Gallery extends Component {\r\n  connection = new WebSocket(window.location.origin.replace(/^http/, 'ws'));\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      photos: [],\r\n      isLoading: false,\r\n      ascending: true,\r\n      btnFixed: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.connection.onmessage = (payload) => {\r\n      const data = JSON.parse(payload.data);\r\n      this.setState((prevState) => {\r\n        const newUniquePhotos = data.photo.filter((photo) => {\r\n          for (let i = 0; i < prevState.photos.length; i++) {\r\n            if (photo.id === prevState.photos[i].id) {\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        });\r\n        return ({\r\n          photos: [...prevState.photos, ...newUniquePhotos],\r\n          isLoading: false,\r\n        });\r\n      });\r\n    };\r\n\r\n    window.addEventListener('scroll', this.onScroll, false);\r\n\r\n    this.interval = setInterval(() => {\r\n      this.connection.send('ping');\r\n    }, 25000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.onScroll, false);\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  onScroll = () => {\r\n    this.loadMorePhotos();\r\n    this.fixSearchBtn();\r\n  }\r\n\r\n  loadMorePhotos = () => {\r\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\r\n    if ((window.innerHeight + scrollTop)\r\n      >= (document.documentElement.offsetHeight - 500) && !this.state.isLoading) {\r\n      this.setState({\r\n        isLoading: true,\r\n      }, () => {\r\n        this.connection.send({});\r\n      });\r\n    }\r\n  }\r\n\r\n  fixSearchBtn = () => {\r\n    const headerBottom = document.querySelector('.header').offsetHeight;\r\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\r\n    if (headerBottom <= scrollTop && !this.state.btnFixed) {\r\n      this.setState({\r\n        btnFixed: true,\r\n      });\r\n    }\r\n    if (headerBottom > scrollTop && this.state.btnFixed) {\r\n      this.setState({\r\n        btnFixed: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  sortPhotos = () => {\r\n    this.setState((prevState) => {\r\n      const sortedPhotos = prevState.photos.sort((a, b) => {\r\n        if (a.title.toLowerCase() < b.title.toLowerCase()) {\r\n          return prevState.ascending ? -1 : 1;\r\n        }\r\n        if (a.title.toLowerCase() > b.title.toLowerCase()) {\r\n          return prevState.ascending ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n      return ({\r\n        photos: [...sortedPhotos],\r\n        ascending: !prevState.ascending,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Header />\r\n        <SortBtn\r\n          btnFixed={this.state.btnFixed}\r\n          ascending={this.state.ascending}\r\n          sortPhotos={this.sortPhotos} \r\n        />\r\n        <Photos photos={this.state.photos} />\r\n        {(this.state.photos.length === 0 || this.state.isLoading) && <Loader />}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Fragment } from 'react';\nimport Gallery from './components/gallery';\nimport './styles/style.css';\n\nexport default function App() {\n  return (\n    <Fragment>\n      <Gallery />\n    </Fragment>\n  );\n}\n"],"sourceRoot":""}